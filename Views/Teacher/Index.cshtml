@* @model List<Hildi.Models.HClass>  *@
@using Htest.Controllers
@model StudentClassesDTO
@{
    ViewData["Title"] = "Home Page";
    HClass selectedClass = null;
    if(Model.SelectedClass != null) {
        selectedClass = Model.SelectedClass;
    }
}

<style>
    #selection-students-wrapper .list-group-item {
        display: flex;
        border: none;
        border-bottom: 1px solid #eee;
    }

    #selection-students-wrapper .list-group-item:hover {
       background-color: #fafafa;
    }

    #selection-students-wrapper .avatar {
        height: 32px;
        width: 32px;
        border-radius: 100%;
        background-color: #2196f3;
        color: #fff;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    #selection-students-wrapper .student-achievement-button,
    #selection-students-wrapper .student-endeavour-button {
        color: #bbb;
        cursor: pointer;
    }

    #selection-students-wrapper .student-achievement-button:hover,
    #selection-students-wrapper .student-endeavour-button:hover {
        color:  #2196f3;
    }

    .input-group-text {
        background-color: #2196f3;
        color: #fff;
    }

    .toast {
        min-width: 290px ;
    }

</style>
    <div class="select-wrapper" style="position: relative;">
        

    <div class="text-center">
        <h1 class="display-4">Select Awards</h1>
        <div class="">
            <form method="POST">
                <div class="form-row align-items-center justify-content-end mb-4">
                    <div class="col-9 col-md-5 col-lg-3 my-1">
                    <label class="mr-sm-2 sr-only" for="inlineFormCustomSelect">Class Selection</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <div class="input-group-text"><i class="fas fa-circle-notch fa-spin"></i></div>
                        </div>  
                       
                        <select class="custom-select mr-sm-2" id="ClassSelect" name="classRef">
                            @foreach(var Class in Model.classes) {
                                @if(Class == selectedClass) {
                                    <option selected value=@Class.Name>@Class.Name</option>
                                }
                                else {
                                    <option value=@Class.Name>@Class.Name</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="col-auto my-1">
                        <button id="btn-submit" type="submit" class="btn btn-primary d-none">SELECT</button>
                    </div>
                </div>
            </form>
        </div>
        <div class="row mt-4" id="selection-students-wrapper">
            <div class="col-12">
            @if(Model.students != null) {
                @foreach (var student in Model.students)
                {
                    <ul class="list-group">
                            <li class = "list-group-item justify-content-between align-items-center"> 
                                <div class="d-flex align-items-center">
                                    <div class="mr-3 avatar">@String.Format("{0}{1}", @student.firstName.ToUpper()[0], @student.secondName.ToUpper()[0])</div>
                                    <div class="student-name">@student.secondName, @student.firstName</div>
                                </div>
                                <div class="d-flex align-items-center">
                                    <div class="mr-4 student-achievement-button">Achievement</div>
                                    <div class="student-endeavour-button">Endeavour</div>
                                </div>
                                
                            </li>
                    </ul>
                }
            }
            </div>
        </div>
    </div>
</div>
<!-- Position it -->
<div style="position: fixed; top: 90px; right: 40px;">
    <!-- add d-none as a hack to prevent items below toast not being clickable -->
    <!-- need to use with some javascript as well -->
    <div id="achievement-award-toast" class="toast d-none" data-delay="4000" style=""> 
        <div class="toast-header">
        <strong class="mr-auto text-primary">Information</strong>
        </div>
        <div class="toast-body">
            Student Achievement Award Saved Ok
        </div>
    </div>

    <!-- add d-none as a hack to prevent items below toast not being clickable -->
    <!-- need to use with some javascript as well -->
    <div id="endeavour-award-toast" class="toast d-none" data-delay="4000" style="">
        <div class="toast-header">
        <strong class="mr-auto text-primary">Information</strong>
        </div>
        <div class="toast-body">
            Student Endeavour Award Saved Ok
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let endeavourSelectionNode = null
        let achievementSelectionNode = null
        $(document).ready(function() {
           
            $(".input-group-text i").removeClass("fa-circle-notch fa-spin").addClass("fa-list")
            $("#ClassSelect").change(function() {
                // $('#teacher-award-toast').toast('show'); // for later use when posting award selecting. Just testing Bootstrap toasts.
                $(".fa-upload").removeClass("d-none")
                $(".input-group-text i").removeClass("fa-list").addClass("fa-circle-notch fa-spin")
                $("#btn-submit").click()
            });

            $(".student-achievement-button").on("click", function() {
                const tempachievementSelectionNode = achievementSelectionNode
                if (achievementSelectionNode !== null) {
                    $(achievementSelectionNode).find(".student-achievement-button").css({"font-weight": "normal", "color": "#bbb"})
                    $(achievementSelectionNode).find(".student-name").css({"font-weight": "normal", "color": "#000"})
                }
                achievementSelectionNode = $(this).closest("li")
                $(achievementSelectionNode).find(".student-achievement-button").css({"font-weight": "bold", "color": "#2196f3"})
                $(achievementSelectionNode).find(".student-name").css({"font-weight": "bold", "color": "#2196f3"}) 

                // Format the response for POSTing
                const data = {
                    Id: 1,
                    Type: "achievement"
                }

                // POST the data back - we expect JSON back ("application/json") 
                // although at the moment, we are not actually sending anything back
                // just success or error codes to fire the done or fail functions.
                $.post( "/teacher/saveaward", data, "application/json" )
                .done(function() {
                    $('#achievement-award-toast').toast('show')
                })
                .fail(function() {
                    // first undo the formatting for the newly selected node
                    $(achievementSelectionNode).find(".student-achievement-button").css({"font-weight": "normal", "color": "#bbb"})
                    $(achievementSelectionNode).find(".student-name").css({"font-weight": "normal", "color": "#000"})

                    // now reset the selected node back to the one it was
                    achievementSelectionNode = tempachievementSelectionNode
                    $(achievementSelectionNode).find(".student-achievement-button").css({"font-weight": "bold", "color": "#2196f3"})
                    $(achievementSelectionNode).find(".student-name").css({"font-weight": "bold", "color": "#2196f3"}) 
                    alert( "There was an error saving the data" );
                })
                .always(function() {
                    console.log("finished saving award")
                });
                            
                
            })

            $(".student-endeavour-button").on("click", function() {

                const tempendeavourSelectionNode = endeavourSelectionNode
                if (endeavourSelectionNode !== null) {
                    $(endeavourSelectionNode).find(".student-endeavour-button").css({"font-weight": "normal", "color": "#bbb"})
                    $(endeavourSelectionNode).find(".student-name").css({"font-weight": "normal", "color": "#000"})
                }
                endeavourSelectionNode = $(this).closest("li")
                $(endeavourSelectionNode).find(".student-endeavour-button").css({"font-weight": "bold", "color": "#2196f3"})
                $(endeavourSelectionNode).find(".student-name").css({"font-weight": "bold", "color": "#2196f3"}) 

                
                // Format the response for POSTing
                const data = {
                    Id: 1,
                    Type: "endeavour"
                }

                // POST the data back
                $.post( "/teacher/saveaward", data, "application/json" )
                .done(function() {
                    $('#endeavour-award-toast').toast('show')
                })
                .fail(function() {
                    // first undo the formatting for the newly selected node
                    $(endeavourSelectionNode).find(".student-endeavour-button").css({"font-weight": "normal", "color": "#bbb"})
                    $(endeavourSelectionNode).find(".student-name").css({"font-weight": "normal", "color": "#000"})

                    // now reset the selected node back to the one it was
                    endeavourSelectionNode = tempendeavourSelectionNode
                    $(endeavourSelectionNode).find(".student-endeavour-button").css({"font-weight": "bold", "color": "#2196f3"})
                    $(endeavourSelectionNode).find(".student-name").css({"font-weight": "bold", "color": "#2196f3"}) 
                    alert( "There was an error saving the data" );
                })
                .always(function() {
                    console.log("finished saving award")
                });
            })


            // fix the issue with Toasts covering the select box and not being visible
            // this is a hack !!! must add class d-none to the toast class in html
            // https://stackoverflow.com/a/61256117
            $("#endeavour-award-toast, #achievement-award-toast").on("show.bs.toast", function() {
                $(this).removeClass("d-none");
            })
            $("#endeavour-award-toast, #achievement-award-toast").on("hidden.bs.toast", function() {
                $(this).addClass("d-none");
            })
            

        });

     </script>
}
